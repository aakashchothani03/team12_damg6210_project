-- USER table creation
CREATE TABLE USERS (
    USER_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    FIRSTNAME VARCHAR2(50) NOT NULL,
    LASTNAME VARCHAR2(50) NOT NULL,
    EMAIL VARCHAR2(70) NOT NULL,
    USERNAME VARCHAR2(50) UNIQUE NOT NULL,
    PASSWORD VARCHAR2(50) NOT NULL,
    IS_ACTIVE BOOLEAN
);

-- CANDIDATE table creation
CREATE TABLE CANDIDATES (
    CANDIDATE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    PHONE VARCHAR2(15),
    AGE NUMBER(2),
    GENDER VARCHAR2(15),
    VETERAN VARCHAR2(100),
    DISABILITY VARCHAR2(100),
    DATE_OF_JOIN DATE,
    USER_ID NUMBER FOREIGN KEY REFERENCES USERS(USER_ID),
    ADD_ID NUMBER FOREIGN KEY REFERENCES ADDRESS(ADDRESS_ID)
);

-- WORK EXPERIENCE table creation - Candidate's Work Experience
CREATE TABLE WORK_EXP (
    CANDIDATE_ID NUMBER FOREIGN KEY REFERENCES CANDIDATES(CANDIDATE_ID),
    COMPANY_NAME VARCHAR2(100) NOT NULL,
    JOB_TITLE VARCHAR2(100) NOT NULL,
    START_DATE DATE,
    END_DATE DATE,
    DESCRIPTION VARCHAR2(2000)
);

-- EDUCATION table creation
CREATE TABLE EDUCATION (
    CANDIDATE_ID NUMBER FOREIGN KEY REFERENCES CANDIDATES(CANDIDATE_ID),
    UNIVERSITY_NAME VARCHAR2(150),
    DEGREE VARCHAR2(50),
    START_DATE DATE,
    END_DATE DATE,
    DEGREE_COMPLETED BOOLEAN,
    MAJOR VARCHAR2(100)
);

-- RESUME table creation
CREATE TABLE RESUME(
    RESUME_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    RES_DOC BLOB NOT NULL,
    DATE_UPLOADED DATE NOT NULL,
    DESCRIPTION VARCHAR2(200),
    CANDIDATE_ID NUMBER FOREIGN KEY REFERENCES CANDIDATES(CANDIDATE_ID),
);

-- SKILLS table creation - all the skills present on the platform
CREATE TABLE SKILLS (
    SKILL_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    SKILL_NAME VARCHAR2(100) NOT NULL
);

-- CANDIDATE SKILLS Join Table
CREATE TABLE CANDIDATE_SKILLS(
    CAN_SKILL_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    CANDIDATE_ID NUMBER FOREIGN KEY REFERENCES CANDIDATES(CANDIDATE_ID),
    SKILL_ID NUMBER FOREIGN KEY REFERENCES SKILLS(SKILL_ID)
);

-- COMPANY table creation
CREATE TABLE COMPANIES (
    COMPANY_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NAME VARCHAR2(50) NOT NULL UNIQUE,
    EMAIL VARCHAR2(50) NOT NULL,
    PHONE VARCHAR2(15) NOT NULL,
    IS_ACTIVE BOOLEAN,
    ADD_ID NUMBER FOREIGN KEY REFERENCES ADDRESS(ADDRESS_ID)
);

-- RECRUITER table creation
CREATE TABLE RECRUITERS (
    RECRUITER_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    USER_ID NUMBER FOREIGN KEY REFERENCES USERS(USER_ID),
    COMPANY_ID NUMBER FOREIGN KEY REFERENCES COMPANIES(COMPANY_ID),
);

-- JOB REQUISITION table creation
CREATE TABLE JOB_REQUISITION(
    REQ_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    JOB_TITLE VARCHAR2(100),
    JOB_DESCRIPTION VARCHAR2(5000),
    DATE_POSTED DATE,
    APPLICATION_DEADLINE DATE,
    GENDER VARCHAR2(15),
    EXPECTED_START_DATE DATE,
    RELOCATION_ALLOWANCE BOOLEAN,
    STATUS VARCHAR2(20),
    COMPANY_ID NUMBER FOREIGN KEY REFERENCES COMPANIES(COMPANY_ID),
    RECRUITER_ID NUMBER FOREIGN KEY REFERENCES RECRUITERS(RECRUITER_ID)
);

-- CANDIDATE APPLICATION Join Table
CREATE TABLE CANDIDATE_APPLICATION (
    CAN_APP_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    STATUS BOOLEAN,
    WILLING_TO_RELOCATE BOOLEAN,
    CANDIDATE_ID NUMBER FOREIGN KEY REFERENCES CANDIDATES(CANDIDATE_ID),
    REQ_ID NUMBER FOREIGN KEY REFERENCES JOB_REQUISITION(REQ_ID)
);

-- ADDRESS table creation
CREATE TABLE ADDRESS(
    ADDRESS_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    STREET1 VARCHAR2(100),
    STREET2 VARCHAR2(100),
    CITY VARCHAR2(40),
    COUNTY VARCHAR2(50),
    STATE VARCHAR2(50),
    ZIPCODE VARCHAR2(50),
    COUNTRY VARCHAR2(50)
);





